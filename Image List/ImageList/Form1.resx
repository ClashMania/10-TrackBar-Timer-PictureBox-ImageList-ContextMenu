<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>22, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADa
        EAAAAk1TRnQBSQFMAgEBBAEAAQgBAAEIAQABGQEAARkBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABZAMAATIDAAEBAQABCAUAAYgBExgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP//wD/AP8A/wD/AP8A
        /wD/AP8AzgABkgT3BJIG7QKSB+0BvAvtB5IC9wSSAbwCkhDtBZIB9wHwBJIB9wHvArUICQEHAbsBtQL3
        A5IBvAENAmYCZQQNBgoCDQQKAg8BCgHtAg4KDwcNAWUEDQGSAg0CDwQOCQ8BDgEPBQ0B9wEPARACEQEV
        AWYBhgGtBc8CtALPAYsBhgFmARUBEQEQAQ8BkgENCWYBFQIPARAGDQMQAQ8B7QEOAw8EEAEPCg0BZQQN
        AZIBDQIPAw4BAAEOAhABEQFDAREDEAEPAg4BDwQNAZIBDwIQAREBFQFmAYsBrQHPArQBzwO0As8BrQKG
        AUMCEAEPAZIBEQQVDQ0CDwMQAQ8B7QEOBA8CEAIPAg0CEQsNAZICDwIOAg8BDgINARADDQMQAQ0CDwUN
        AZIBEAFDAxUBZgGLAa0BzwK0BNYBtALPAYYCZgFDAhEBkgJDARUBFAFDDA0BEAUPAQoB7QEOBw8BEAIN
        AkMBEQoNAZIEDgIPEg0BkgERA2YBFQEUAosBzwK0BNYCtAHPAYYDZgEVAUMB9wENAUMBFQNmAUMEDQFI
        BQ0CEAUNAZIBDgEPAhACDwMQBg0BQwFmBmUBDQGSBQ4EDwYAAQ4EDwQNAZIBQwZmAYsBzwK0AdYCCQG0
        As8BhgVmARUB9wENARUBEwJmARMBFAFDCA0BDwEQBg0BkgEOAQ8BEAMPAxAGDQhlAQ0BkgQOAg8BEAEP
        CA4FDwMNAZIBEQZmAYYCzwG0AbUC1gG0Ac8BhgZmARUBkgENARQBEgFsARMCEgEVAQ0DEAINAUkBEQIP
        Bg0BkgEOAhAEDwUNAkMBDQhlAQ0BkgQOAg8CEAMPBA4BDwERAw0BEAEPAQ0BDwHtARABFQJmAoYCZgGG
        As8BtQLWAc8ChgZmAUMBkgEVAmYGDQEKAQ8DEAFDARABDwIQAQ0ECgHtAQ4BEQEVAhQBFQMNAWwDZgEU
        AQ0IZQENAZICDwEOAw8CEAEPAQ0BDwQOAQ8BDQFsAmYBEAMPAe0BEAEVAmYChgJmAYYBiwHPArUBtAGL
        AoYGZgFDAZIBQwIVAUMHDQERAhABEQEQAQ8BEAMNAwoB7QEOAREBFAISARQDDQJsAmYBFAENCGUBDQGS
        Bw8BEAEPAg0EDwENAWUCbAFmAUMBEAIPAe0BDwNmAoYCZgKGAa4CtQHPAYsChgZmAREBkgJDAhUCQxEN
        AQoB7QEOAREBFQESARMBFAMNAmwDZgFDCGUBDQGSARACDwEQAg8CDQEPAw0CDwENAmsBiwJsARQBQwIP
        Ae0BCgJlAWYChgFmAoYBZgGGAs8BrgFmAoYFZgFlAQ0BkgFDBBUCQwERAQ8KDQEPBAoB7QEOAQ8BEAMR
        CQ0IZQENAZIBEAIPARACDwINARAFDQNrAWwBiwEGAWwBFQENARABkgERA2YFhgFmAYYDrgFmBYYDZgFD
        AfcBQwMVA0MBEQEPCg0BDwQKAZIBDgIPAQ4CDwkNCGUBDQH3BhABDQEQAREDawENAWsBBgFrAmwBkAGB
        AXEBbAENARUB9wFDAWYBhgFmBYYCZgOuAWYCiwOGA2YBFQH3AkMBFQFDAREDEAENAgoEDQIPAw0CDwEN
        AWUB9wQOAg8JDQllAfcGEAENARABEQFsAQYBgQIGAYEBbAFtAesBkQGQAZYBkAFrARIB7wFDAWYBhgFm
        BYYCZgOuAWYCiwOGA2YBFQH3BGYBFQIRARAODQFmAWUB9wEOAg8BEAIRAUMDDQNmAg0JZQH3ARABEQJD
        AhEBQwIRAmwDkAG5AZACbQOQAYEBBgGRAQcBQwNmBIYCiwGuApECrgKLBIYCZgEVAfcEZgETAhQBQwwN
        AkgBZgFlAbUBDgEPARABEQNDAg0FZgENCWUB9wERARUCFAEVAkMBEQFDAmwCkAGWAbkBkQJtAWwBkAIG
        AYEBkQG8AUMDZgSGAYsBrgGRArQBkQGuAosFhgFmARUB9wEVARMD6gESAWwCZggNA2YBTgFIAWwBiwG7
        AQ4BDwEQAhEBQwUNAWUCZgZlAmYCZQH3AUMCSgFRAUoBFQJDARUCbAGQAp0BugGRAxIBbAENAWsBBgG6
        AfABQwJmBoYBzwG0AtYBtQG0AosFhgJmAfcBZgETAhIBEwEUAhUIDQFlA2YCbAKLAbsBDgEPAhABEQEV
        AUMDDQJlAmYFZQNmAmUB9wEVAkoBUQFKARQCQwEVARMBbAGRAZ0CugGRARMCFAEVAREBDQEGAZ0B8QEV
        AWYGhgHPAbUE1gG1AbQBiwWGAmYB9wRmAUMJDQNlA2YCiwGuAYsBuwEOAQ8CEAERARUBZgFDAQ0CZgFl
        AmYEZQJmAWwBZgJlAfcBFQETAUoBUQFKARMCFQETARIBbQGRArsBugGRARQBQwMRARUBbAH3AfEBZgKu
        AoYBiwGGAc8BtQIJA9YBtQK0AYYFiwFmAe8BZgMVBUMDDQEPBA0DZgKLAa4BtAEJAQ8BEAMRAUMCFQFm
        AmwBrgGLAYYDZQNmAWUBZgFsAWUB9wEVARMBSgFRAUoBEwEVARMC6gFtAewB9wHvAbsB6wEUAhABEQFD
        ARUBFAH3AfEBrgKLA4YBrgG0AgkB3ATWAdwBuwGRAYsEhgGuAQcCZgcVAw0BEAEPAg0BZQJmAYYBiwGu
        Ac8BtAG8AQ8BQwIVAhMCFAFmAWwBbQKLAmYCZQNmAmUBZgFlAfcBFQEUARICSgEUARUBEgNtAewC9wHv
        AesBFQIPARABFQEUARMBkgHxAa4BiwSGAbQBtQIJBtYBuwH3Aa4FhgHvCWYCDQIQAQ8BDQJlAWYCiwGu
        Ac8BtAG1AfABEAEVARMBEgJtARMBFAFmAesBbQRmAmUBEgETAWYDZQENAZICFQEUAUoBFAEVARQB6gHr
        Am0B7AHtAZIB7QHqAUMCEAERAUMBFAFsAe0BvAFmA4YBZgGuAbsCCQK1BLQCtQG7AZEB6gOGAWYB9wNm
        ARUBQwkNAmYBiwKuA7QBtQG7AfABEQESA20B6gIUC2YEZQFDAfcBFQYUARIDbQTsARIBQwEVARMBEgEU
        ARIB6wHtAbwEZgGuAbUBCQHcAQkItAEJAbsBkQGGA2YB9wJmARUBQwkNAWUBZgKLAa4DtAK1AbsB8QFD
        ARICbQHqARICEwpmBWUBQwH3ARQGEwESAuoBbQLsAfgCbQHqAesB+AHrARMBbQHsAe0BvANmAWwBtAEJ
        A9wItAHcAQkBuwGuA2YB9wkNA18CZQGGAosBrgK0ArUBuwEJAfEBQwMVARQEEwFmARMBEgVmBmUBDQGS
        ARMBEgHqAm0B6gISARMBEgFtAusCbQHsAfcCBwGSARIBbQHtAfcBvAJmAWwBkQG7AtwBuwO0A88DtAHV
        AtwBtAGuAmYB9wFCAU0BPgcAAT4DAAEoAwABZAMAATIDAAEBAQABAQUAASABAxYAA///AP8A/wAkAAs=
</value>
  </data>
</root>